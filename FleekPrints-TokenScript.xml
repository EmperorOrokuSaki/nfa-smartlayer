<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE token  [
        <!ENTITY style SYSTEM "shared.css">
        <!ENTITY about.en SYSTEM "about.en.js">
        <!ENTITY approve.en SYSTEM "approve.en.js">
        ]>

<ts:token
    xmlns:ts="http://tokenscript.org/2020/06/tokenscript"
    xmlns:xhtml="http://www.w3.org/1999/xhtml"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:asnx="urn:ietf:params:xml:ns:asnx"
    xmlns:ethereum="urn:ethereum:constantinople" xsi:schemaLocation="http://tokenscript.org/2020/06/tokenscript http://tokenscript.org/2020/06/tokenscript.xsd" custodian="false">
    <asnx:module name="FleekPrints-event-Approval">
        <namedType name="Approval">
            <type>
                <sequence>
                    <element name="owner" ethereum:type="address" ethereum:indexed="true"></element>
                    <element name="approved" ethereum:type="address" ethereum:indexed="true"></element>
                    <element name="tokenId" ethereum:type="uint256" ethereum:indexed="true"></element>
                </sequence>
            </type>
        </namedType>
    </asnx:module>
    <asnx:module name="FleekPrints-event-ApprovalForAll">
        <namedType name="ApprovalForAll">
            <type>
                <sequence>
                    <element name="owner" ethereum:type="address" ethereum:indexed="true"></element>
                    <element name="operator" ethereum:type="address" ethereum:indexed="true"></element>
                    <element name="approved" ethereum:type="bool" ethereum:indexed="false"></element>
                </sequence>
            </type>
        </namedType>
    </asnx:module>
    <asnx:module name="FleekPrints-event-MessageFailed">
        <namedType name="MessageFailed">
            <type>
                <sequence>
                    <element name="_srcChainId" ethereum:type="uint16" ethereum:indexed="false"></element>
                    <element name="_srcAddress" ethereum:type="bytes" ethereum:indexed="false"></element>
                    <element name="_nonce" ethereum:type="uint64" ethereum:indexed="false"></element>
                    <element name="_payload" ethereum:type="bytes" ethereum:indexed="false"></element>
                    <element name="_reason" ethereum:type="bytes" ethereum:indexed="false"></element>
                </sequence>
            </type>
        </namedType>
    </asnx:module>
    <asnx:module name="FleekPrints-event-OwnershipTransferred">
        <namedType name="OwnershipTransferred">
            <type>
                <sequence>
                    <element name="previousOwner" ethereum:type="address" ethereum:indexed="true"></element>
                    <element name="newOwner" ethereum:type="address" ethereum:indexed="true"></element>
                </sequence>
            </type>
        </namedType>
    </asnx:module>
    <asnx:module name="FleekPrints-event-RetryMessageSuccess">
        <namedType name="RetryMessageSuccess">
            <type>
                <sequence>
                    <element name="_srcChainId" ethereum:type="uint16" ethereum:indexed="false"></element>
                    <element name="_srcAddress" ethereum:type="bytes" ethereum:indexed="false"></element>
                    <element name="_nonce" ethereum:type="uint64" ethereum:indexed="false"></element>
                    <element name="_payloadHash" ethereum:type="bytes32" ethereum:indexed="false"></element>
                </sequence>
            </type>
        </namedType>
    </asnx:module>
    <asnx:module name="FleekPrints-event-ScriptUpdate">
        <namedType name="ScriptUpdate">
            <type>
                <sequence>
                    <element name="newScriptURI" ethereum:type="string[]" ethereum:indexed="false"></element>
                </sequence>
            </type>
        </namedType>
    </asnx:module>
    <asnx:module name="FleekPrints-event-SetMinDstGas">
        <namedType name="SetMinDstGas">
            <type>
                <sequence>
                    <element name="_dstChainId" ethereum:type="uint16" ethereum:indexed="false"></element>
                    <element name="_type" ethereum:type="uint16" ethereum:indexed="false"></element>
                    <element name="_minDstGas" ethereum:type="uint256" ethereum:indexed="false"></element>
                </sequence>
            </type>
        </namedType>
    </asnx:module>
    <asnx:module name="FleekPrints-event-SetPrecrime">
        <namedType name="SetPrecrime">
            <type>
                <sequence>
                    <element name="precrime" ethereum:type="address" ethereum:indexed="false"></element>
                </sequence>
            </type>
        </namedType>
    </asnx:module>
    <asnx:module name="FleekPrints-event-SetTrustedRemote">
        <namedType name="SetTrustedRemote">
            <type>
                <sequence>
                    <element name="_remoteChainId" ethereum:type="uint16" ethereum:indexed="false"></element>
                    <element name="_path" ethereum:type="bytes" ethereum:indexed="false"></element>
                </sequence>
            </type>
        </namedType>
    </asnx:module>
    <asnx:module name="FleekPrints-event-SetTrustedRemoteAddress">
        <namedType name="SetTrustedRemoteAddress">
            <type>
                <sequence>
                    <element name="_remoteChainId" ethereum:type="uint16" ethereum:indexed="false"></element>
                    <element name="_remoteAddress" ethereum:type="bytes" ethereum:indexed="false"></element>
                </sequence>
            </type>
        </namedType>
    </asnx:module>
    <asnx:module name="FleekPrints-event-Transfer">
        <namedType name="Transfer">
            <type>
                <sequence>
                    <element name="from" ethereum:type="address" ethereum:indexed="true"></element>
                    <element name="to" ethereum:type="address" ethereum:indexed="true"></element>
                    <element name="tokenId" ethereum:type="uint256" ethereum:indexed="true"></element>
                </sequence>
            </type>
        </namedType>
    </asnx:module>
    <ts:label>
        <ts:string xml:lang="en">FleekPrints</ts:string>
    </ts:label>
    <ts:contract interface="erc721" name="FleekPrints">
        <ts:address network="11155111">0x9e4A318C788e0097A24146Fe7041a0CD93939D56</ts:address>
        <!--mainnet-->
    </ts:contract>
    <ts:origins>
        <!-- Define the contract which holds the token that the user will use -->
        <ts:ethereum contract="FleekPrints"/>
        <!-- as above ts:contract name -->
    </ts:origins>
    <ts:cards>
        <ts:card type="action">
            <ts:label>
                <ts:string xml:lang="en">About</ts:string>
            </ts:label>
            <ts:view
                xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
                <style type="text/css">&style;</style>
                <script type="text/javascript">&about.en;</script>
            </ts:view>
        </ts:card>
        <ts:card type="action">
            <ts:label>
                <ts:string xml:lang="en">Approve</ts:string>
            </ts:label>
            <ts:attribute name="approvalAddress">
                <ts:type>
                    <ts:syntax>1.3.6.1.4.1.1466.115.121.1.36</ts:syntax>
                </ts:type>
                <ts:label>
                    <ts:string xml:lang="en">Approval Address</ts:string>
                </ts:label>
                <ts:origins>
                    <ts:user-entry as="address"/>
                </ts:origins>
            </ts:attribute>
            <ts:transaction>
                <ethereum:transaction function="approve" contract="FleekPrints" as="uint">
                    <ts:data>
                        <ts:address ref="approvalAddress"/>
                        <ts:uint256 ref="tokenId"/>
                    </ts:data>
                </ethereum:transaction>
            </ts:transaction>
            <ts:view
                xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
                <style type="text/css">&style;</style>
                <script type="text/javascript">&approve.en;</script>
            </ts:view>
        </ts:card>
    </ts:cards>
    <ts:attribute name="DEFAULT_PAYLOAD_SIZE_LIMIT">
        <ts:type>
            <ts:syntax>1.3.6.1.4.1.1466.115.121.1.36</ts:syntax>
        </ts:type>
        <ts:label>
            <ts:string xml:lang="en">DEFAULT_PAYLOAD_SIZE_LIMIT</ts:string>
        </ts:label>
        <ts:origins>
            <ethereum:call function="DEFAULT_PAYLOAD_SIZE_LIMIT" contract="FleekPrints" as="uint"></ethereum:call>
        </ts:origins>
    </ts:attribute>
    <ts:attribute name="authorizedSource">
        <ts:type>
            <ts:syntax>1.3.6.1.4.1.1466.115.121.1.15</ts:syntax>
        </ts:type>
        <ts:label>
            <ts:string xml:lang="en">authorizedSource</ts:string>
        </ts:label>
        <ts:origins>
            <ethereum:call function="authorizedSource" contract="FleekPrints" as="address"></ethereum:call>
        </ts:origins>
    </ts:attribute>
    <ts:attribute name="isMain">
        <ts:type>
            <ts:syntax>1.3.6.1.4.1.1466.115.121.1.15</ts:syntax>
        </ts:type>
        <ts:label>
            <ts:string xml:lang="en">isMain</ts:string>
        </ts:label>
        <ts:origins>
            <ethereum:call function="isMain" contract="FleekPrints"></ethereum:call>
        </ts:origins>
    </ts:attribute>
    <ts:attribute name="lzEndpoint">
        <ts:type>
            <ts:syntax>1.3.6.1.4.1.1466.115.121.1.15</ts:syntax>
        </ts:type>
        <ts:label>
            <ts:string xml:lang="en">lzEndpoint</ts:string>
        </ts:label>
        <ts:origins>
            <ethereum:call function="lzEndpoint" contract="FleekPrints" as="address"></ethereum:call>
        </ts:origins>
    </ts:attribute>
    <ts:attribute name="mainChainID">
        <ts:type>
            <ts:syntax>1.3.6.1.4.1.1466.115.121.1.36</ts:syntax>
        </ts:type>
        <ts:label>
            <ts:string xml:lang="en">mainChainID</ts:string>
        </ts:label>
        <ts:origins>
            <ethereum:call function="mainChainID" contract="FleekPrints" as="uint"></ethereum:call>
        </ts:origins>
    </ts:attribute>
    <ts:attribute name="name">
        <ts:type>
            <ts:syntax>1.3.6.1.4.1.1466.115.121.1.26</ts:syntax>
        </ts:type>
        <ts:label>
            <ts:string xml:lang="en">name</ts:string>
        </ts:label>
        <ts:origins>
            <ethereum:call function="name" contract="FleekPrints" as="utf8"></ethereum:call>
        </ts:origins>
    </ts:attribute>
    <ts:attribute name="owner">
        <ts:type>
            <ts:syntax>1.3.6.1.4.1.1466.115.121.1.15</ts:syntax>
        </ts:type>
        <ts:label>
            <ts:string xml:lang="en">owner</ts:string>
        </ts:label>
        <ts:origins>
            <ethereum:call function="owner" contract="FleekPrints" as="address"></ethereum:call>
        </ts:origins>
    </ts:attribute>
    <ts:attribute name="precrime">
        <ts:type>
            <ts:syntax>1.3.6.1.4.1.1466.115.121.1.15</ts:syntax>
        </ts:type>
        <ts:label>
            <ts:string xml:lang="en">precrime</ts:string>
        </ts:label>
        <ts:origins>
            <ethereum:call function="precrime" contract="FleekPrints" as="address"></ethereum:call>
        </ts:origins>
    </ts:attribute>
    <ts:attribute name="scriptURI">
        <ts:type>
            <ts:syntax>1.3.6.1.4.1.1466.115.121.1.26</ts:syntax>
        </ts:type>
        <ts:label>
            <ts:string xml:lang="en">scriptURI</ts:string>
        </ts:label>
        <ts:origins>
            <ethereum:call function="scriptURI" contract="FleekPrints" as="utf8"></ethereum:call>
        </ts:origins>
    </ts:attribute>
    <ts:attribute name="symbol">
        <ts:type>
            <ts:syntax>1.3.6.1.4.1.1466.115.121.1.26</ts:syntax>
        </ts:type>
        <ts:label>
            <ts:string xml:lang="en">symbol</ts:string>
        </ts:label>
        <ts:origins>
            <ethereum:call function="symbol" contract="FleekPrints" as="utf8"></ethereum:call>
        </ts:origins>
    </ts:attribute>
</ts:token>